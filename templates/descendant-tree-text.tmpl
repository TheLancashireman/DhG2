{# descendant-tree-html.tmpl - a template for a descendant tree in HTML

	(c) David Haworth

	This file is part of DhG.

	DhG is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	DhG is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with DhG.  If not, see <http://www.gnu.org/licenses/>.

	Input is a dictionary containing the following items:
		cardbase	: the server's 'cards' directory
		subj		: the subject of the card
		partners	: a list of the subject, partners and children.
					: At this level, the left partner is always the subject

	Each item in items is an instance of a class with the following members:
		level		: the level. Level 1 is the top level
		left		: the left-hand person of a partnership:
					: 	at the top level, the subject
					:	at lower levels, a child of the level above
		right		: the right-hand person of the partnership
					:	None if no partners
					:	person with name "not known" if there are children with an unknown partner
		children	: a list of the children of the partnership. It's a recursive structure
	An individual can occur more than once in an items list, when there are multiple partners

	Each person (subj, left, right) is an instance of a class; see person class in person-card-html.tmpl
	Only vital and file are used.
#}
{%  set subj = tp['subj'] %}
  Descendants of {{ subj.vital }}

{%  for obj in tp['partners'] recursive %}
  {{ obj.level }}. [{{  obj.left.uniq  }}] {{ obj.left.vital }}{% if  obj.right != None %} === [{{  obj.right.uniq  }}] {{ obj.right.vital }}{% endif +%}
{%    if obj.children != None %}
{%      if obj.children == 'private' %}
      {{ obj.level+1 }}. Private
{%      else %}
{{        loop(obj.children) | indent(width=2, first=True) -}}
{%      endif -%}
{%    endif -%}
{%  endfor -%}
